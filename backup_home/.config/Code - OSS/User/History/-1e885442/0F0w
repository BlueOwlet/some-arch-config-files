#!/bin/bash

. menu


update_system(){
    sudo pacman --noconfirm -Syu
}

# Adding extra users
create_users(){
    users=("vyda" "interact")
    for user in "${users[@]}"; do
        if id "$username" &>/dev/null; then
            echo "User $user already exists."
        else
            sudo useradd "$user"
            echo "User $user created."
        fi
    done
}



create_ssh_keys(){
    for user in ${users[@]}; do
        sudo -u $user ssh-keygen -f /tmp/$user -N $user
        sudo mv /tmp/$user /tmp/$user.pub ~/.ssh/
    done
    chmod
    sudo chown -R owl:owl ~/.ssh
    chmod u+rwx,go-rwx ~/.ssh
    chmod u+rw,go-rwx ~/.ssh/*


}


install_starship(){
    #Starship theme
    curl -sS https://starship.rs/install.sh | sh
}




# Personal system packages

install_system_packages(){
    sudo pacman --noconfirm -S usbutils rsync unzip bat xdg-desktop-portal-hyprland udiskie sshfs


}

# WORK DEPENDANCIES
install_work_programs(){
    sudo pacman --noconfirm -S docker docker-compose

}



# Policy Kit
install_policy_kit(){
    sudo pacman --noconfirm -S gnome-keyring polkit-gnome

}

# File Manager

install_filemanager(){
    sudo pacman --noconfirm -S nautilus

}


#bluetooth
install_bluetooth(){
    sudo pacman --noconfirm -S bluez bluez-utils blueman
    sudo systemctl enable bluetooth.service
    sudo systemctl start bluetooth.service

}

#wifi
install_wifi(){
    sudo pacman --noconfirm -S networkmanager libnm
    sudo systemctl start NetworkManager
    sudo systemctl enable NetworkManager

}


#Building tools (cmake?)
install_building_tools(){
    sudo pacman --noconfirm -S meson clang

}


#flatpak
install_flatpak(){
    flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    flatpak install org.gnome.{Platform,Sdk}//44 org.freedesktop.Sdk.Extension.rust-stable//22.08 org.freedesktop.Sdk.Extension.llvm15//22.08

}

#Sound Managers
#sound -> pulseaudio
install_sound(){
    sudo pacman -S pavucontrol

}

#sound -> helvum
install_helvum_flatpak(){
    flatpak-builder --install flatpak-build/ build-aux/org.pipewire.Helvum.json
    flatpak run org.pipewire.Helvum

}

#sound -> helvum
install_helvum_git(){
    cd ~
    git clone https://gitlab.freedesktop.org/pipewire/helvum.git
    cd helvum
    meson setup build && cd build
    meson compile
    meson install
}




# App Launcher
install_app_launcher(){
    sudo pacman --noconfirm -S wofi

}




#PARU -> ARCH USER REPOSITORY (AUR) HELPER
install_AUR_helper(){
    sudo pacman --noconfirm -S --needed base-devel
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si
    cd ~
}


# Personal dependencies

install_personal_programs(){
    sudo pacman --noconfirm -S firefox git inkscape mixxx ktorrent code usbutils 
    sudo pacman --noconfirm -S vlc libmicrodns

}


# Background sofwtare
install_background_support(){
    sudo pacman --noconfirm -S swaybg
    sudo paru -S waypaper-git

}


# KVM QEMU virt-manager
install_virtual_manager(){
    # main package
    sudo pacman --noconfirm -S libvirt
    # main QEMU package
    sudo pacman --noconfirm -S qemu-desktop
    # extra packages for virt-manager QEMU connection
    sudo pacman --noconfirm -S iptables-nft dnsmasq vde2 bridge-utils openbsd-netcat
    # main virt-manager packages
    sudo pacman --noconfirm -S virt-manager virt-viewer
    # enable and start libvirt services
    sudo systemctl enable libvirtd.socket
    sudo systemctl start libvirtd.socket
    # add user to group
    sudo usermod -aG libvirt $USER
    # restart libvirt service
    sudo systemctl restart libvirtd.service

    #  IMPORTANT    use this command on the external drive or look online to change virt-namager conf from root to your own user and libvert-qemu group
    # This is applied to the user folder in the media folder, not to the actual drive
    sudo chmod a+x /media/owl/
}


post_all(){

    update_system
    create_users
    create_ssh_keys
    install_starship
    install_system_packages
    install_work_programs
    install_personal_programs
    install_policy_kit
    install_filemanager
    install_bluetooth
    install_wifi
    install_building_tools
    install_flatpak
    install_sound
    install_helvum_flatpak
    install_helvum_git
    install_app_launcher
    install_AUR_helper
    install_background_support
    install_virtual_manager
}

post_menu(){

    menu "system/post"

}


